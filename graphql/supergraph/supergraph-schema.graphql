schema
  @core(feature: "https://specs.apollo.dev/core/v0.2"),
  @core(feature: "https://specs.apollo.dev/join/v0.1", for: EXECUTION)
{
  query: Query
}

directive @core(as: String, feature: String!, for: core__Purpose) repeatable on SCHEMA

directive @join__field(graph: join__Graph, provides: join__FieldSet, requires: join__FieldSet) on FIELD_DEFINITION

directive @join__graph(name: String!, url: String!) on ENUM_VALUE

directive @join__owner(graph: join__Graph!) on INTERFACE | OBJECT

directive @join__type(graph: join__Graph!, key: join__FieldSet) repeatable on INTERFACE | OBJECT

type Book {
  author: String
  genre: Genre
  id: ID!
  title: String
}

enum Genre {
  ADVENTURE
  DRAMA
  FANTASY
  FANTASY_FICTION
  FICTION
  HORROR
  SCIENCE_FICTION
}

type Query {
  books: [Book] @join__field(graph: LIBRARY)
  users: [User] @join__field(graph: USER)
}

type User {
  age: Int
  name: String
}

enum core__Purpose {
  """
  `EXECUTION` features provide metadata necessary to for operation execution.
  """
  EXECUTION

  """
  `SECURITY` features provide metadata necessary to securely resolve fields.
  """
  SECURITY
}

scalar join__FieldSet

enum join__Graph {
  LIBRARY @join__graph(name: "library" url: "http://localhost:4002")
  USER @join__graph(name: "user" url: "http://localhost:4001")
}
